#See https://aka.ms/containerfastmode to understand how Visual Studio uses this Dockerfile to build your images for faster debugging.

FROM mcr.microsoft.com/dotnet/sdk:7.0 AS test

FROM jenkins/inbound-agent:4.7-1-alpine

USER root

RUN apk add doas; \
    adduser jenkins -G wheel; \
    echo 'jenkins:password' | chpasswd; \
    echo 'permit :wheel as root' > /etc/doas.d/doas.conf
USER jenkins


RUN apk add coreutils

#RUN adduser --uid 1001 jenkins && mkdir /home/jenkins && chown jenkins:jenkins /home/jenkins

RUN mkdir /home/jenkins && chown jenkins:jenkins /home/jenkins

#RUN addgroup -S jenkinsgroup && adduser -S jenkins -G jenkinsgroup

# Install Java
#RUN apt-get update
#RUN apt-get install -y openjdk-11-jre-headless
#RUN apt-get install -y zip

RUN apk add openjdk11
RUN apk add zip
# Create symlink to allow the Java environment varible to point to the locally installed path
RUN ln -s /usr/lib/jvm/java-1.11.0-openjdk-amd64 /usr/lib/jvm/openjdk-11.0.16_8

#USER jenkins

WORKDIR /src

COPY --chown=jenkins:jenkins ./scripts /scripts

# Install dotnet tools
RUN dotnet tool install --global dotnet-sonarscanner
RUN dotnet tool install --global Amazon.Lambda.Tools
RUN dotnet tool install --global Amazon.Lambda.TestTool-6.0

RUN echo "export PATH=$PATH:/home/jenkins/.dotnet/tools:/scripts" >> ~/.bashrc